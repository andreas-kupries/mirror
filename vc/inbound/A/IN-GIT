# Copyright (C) 2006,2007 Shawn O. Pearce <spearce@spearce.org>
# Conceptually based on gitcompletion (http://gitweb.hawaga.org.uk/).
# Distributed under the GNU General Public License, version 2.0.

if [ -d .git ]; then
  echo .git;
else
  git rev-parse --git-dir 2> /dev/null;
fi;

You could either wrap that in a function or use it in a script.

Condensed into a one line condition suitable for bash or zsh

[ -d .git ] || git rev-parse --git-dir > /dev/null 2>&1

shareimprove this answer
	     
edited Aug 8 '12 at 2:09
voyager
22.2k65985
	
answered Feb 1 '10 at 21:57
jabbie
1,08178
	
2 	 
	 
@William Pursell Why fork when you don't need to? Mainly for speed in the trivial case. – jabbie Feb 25 '10 at 3:46
4 	  
	  
Your one liner doesn't do the same thing... Maybe it should be like this: ([ -d .git ] && echo .git) || git rev-parse --git-dir 2> /dev/null – nathan.f77 Oct 15 '11 at 14:27
6     
      
The answer should be updated to use git rev-parse --is-inside-git-dir. I personally use git rev-parse --is-inside-work-tree before set my PS1. – juliohm Aug 10 '13 at 13:53
2    
     
@nyuszika7h, that is why I also mentioned --is-inside-work-tree. – juliohm May 21 '14 at 20:42
4 	      
	      
Neither --is-inside-work-tree nor --is-inside-git-dir will work when you are outside of a git repo. see: groups.google.com/forum/#!topic/git-users/dWc23LFhWxE – fisherwebdev Jul 19 '14 at 6:30
show 6 more comments
up vote
20
down vote
     

You can use:

git rev-parse --is-inside-work-tree

Which will print 'true' if you are in a git repos working tree.

Note that it still returns output to STDERR if you are outside of a git repo (and does not print 'false').

Taken from this answer: http://stackoverflow.com/a/2044714/12983
shareimprove this answer
	     
answered Jun 4 '13 at 18:35
TM.
27.2k2495118
	
add a comment
up vote
19
down vote
     

Use git rev-parse --git-dir

if git rev-parse --git-dir > /dev/null 2>&1; then
  : # This is a valid git repository (but the current working
    # directory may not be the top level.
    # Check the output of the git rev-parse command if you care)
else
  : # this is not a git repository
fi

shareimprove this answer
	     
answered Feb 2 '10 at 15:48
William Pursell
83.5k17137177
	
add a comment
up vote
6
down vote
     

Not sure if there is a publicly accessible/documented way to do this (there are some internal git functions which you can use/abuse in the git source itself)

You could do something like;

if ! git ls-files >& /dev/null; then
  echo "not in git"
fi

shareimprove this answer
	     
answered Feb 1 '10 at 21:59
James
2005
	
add a comment
up vote
3
down vote
     

A very fast option is http://vc.gerg.ca/hg/vcprompt/ .. multi-VC, in C, no dependencies other than itself.

git status >/dev/null 2>&1 && echo Hello World!
http://hg.gerg.ca/vcprompt/
https://gitorious.org/zsh-git/zsh-git/blobs/master/functions/zgitinit

http://stackoverflow.com/questions/2044574/determine-if-directory-is-under-git-control